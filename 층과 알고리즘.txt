1. 층 (Layer)
    정의: 신경망에서 데이터가 흐르는 기본적인 구조 단위. 입력을 받아 처리하고 출력을 생성하는 각 단위.
    기능: 각 층은 주어진 입력에 대해 기본적인 연산을 수행하며, 주로 데이터의 변환이나 특성 추출을 담당한다.
    특징: 일반적으로 네트워크의 구성 요소로, 여러 층이 순차적으로 연결되어 최종 결과를 도출한다.
    예시:

    입력층: 데이터를 받아들여 네트워크로 전달하는 첫 번째 층.
    은닉층: 입력 데이터를 처리하고 학습을 위한 특성들을 추출하는 중간 층.
    출력층: 최종적인 예측 결과나 출력값을 생성하는 층.
2. 알고리즘 (Algorithm) / 모듈 (Module)
    정의: 특정 작업을 수행하는 독립적인 코드 조각이나 수학적 연산을 의미한다. 여러 알고리즘들이 결합되어 특수한 연산을 수행할 수 있다.
    기능: 알고리즘은 특정 문제를 해결하기 위해 계산하거나 처리하는 방법을 정의한다. 보통 모듈로 구현되어 독립적으로 작업을 수행한다.
    특징: 알고리즘은 하나의 단위 작업으로, 네트워크나 시스템 내에서 특정 기능을 담당하며 독립적으로도 사용될 수 있다.
    예시:

    ReLU: 입력값이 0보다 크면 그대로, 작으면 0으로 변환하는 활성화 함수.
    Adam: 네트워크의 가중치 업데이트를 위한 최적화 알고리즘.
    Batch Normalization: 출력값을 정규화하여 학습을 안정시키는 알고리즘.
핵심 차이점
    층 (Layer)은 신경망에서 데이터를 처리하는 구조적인 단위로, 각 계층은 입력-출력 관계를 가지고 데이터를 변환한다.
    알고리즘 (Algorithm) 또는 모듈 (Module)은 구체적인 계산 작업을 수행하는 기능 단위로, 네트워크 내에서 필요한 작업을 개별적으로 수행할 수 있다.
    결론
    층은 신경망의 구조적인 구성 요소로, 연속적인 데이터 처리를 담당한다.
    알고리즘이나 모듈은 네트워크 내에서 특정 계산 작업을 독립적으로 수행하며, 여러 알고리즘들이 결합되어 복잡한 특수층을 만들 수 있다.

층과 알고리즘의 관계
    층은 신경망에서 데이터 흐름의 단위이고, 각 층은 특정 작업을 수행한다. 이때 각 층은 여러 알고리즘 또는 모듈을 구성 요소로 사용해서 연산을 처리한다.
    알고리즘은 층 내에서 특정 연산을 담당하는 기능 단위로, 여러 알고리즘이 결합되어 층을 구성하게 된다.
    
    #예시로 보는 관계
        합성곱층 (Convolutional Layer)
            이 층은 합성곱 연산 (Convolution) 을 수행하는 특수층이지만, 그 안에서 ReLU(활성화 함수), Batch Normalization(정규화), Max Pooling(풀링)과 같은 여러 알고리즘들이 함께 사용된다. 여기서 합성곱 연산은 알고리즘이며, ReLU나 Batch Normalization도 각기 다른 알고리즘으로, 이들은 모두 합성곱층이라는 하나의 층을 구성하는 구성 요소들이 된다.
        순환 신경망(RNN)
            RNN은 순차적인 데이터를 처리하는 특수층으로, 이 안에서 LSTM이나 GRU와 같은 알고리즘들이 입력 데이터를 처리하는 구성 요소로 작용한다. LSTM이나 GRU는 알고리즘이고, 이들이 RNN층의 구성 요소로 사용되는 것이다.
